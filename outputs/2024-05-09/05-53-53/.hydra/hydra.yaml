hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - backbone_config=graphormer
    - backbone=geomformer
    - encoder_attention_heads=8
    - encoder_layers=12
    - encoder_ffn_embed_dim=4096
    - encoder_embed_dim=1024
    - droppath_prob=0.0
    - attn_dropout=0.1
    - act_dropout=0.1
    - dropout=0.1
    - weight_decay=0.0
    - sandwich_ln=True
    - add_3d=True
    - data_path=/data/peiran/
    - data_path_list="pm6_10M_refined4.lmdb,matter-sim-3M,48organisms-fullatom.lmdb"
    - dataset_name_list="pm6,mattersim,afdb"
    - dataset_split_raito="0.9,0.0,0.1"
    - save_dir=/fastdata/peiran/tox/checkpoints/psmV0test/
    - seed=666666
    - ifresume=True
    - mask_ratio=0.5
    - noise_scale=0.2
    - num_pred_attn_layer=6
    - d_tilde=1
    - strategy=Zero1
    - max_lr=2e-4
    - num_timesteps=1000
    - mode_prob="0.1,0.2,0.6,0.1"
    - noise_mode=diff
    - use_2d_atom_features=True
    - use_2d_bond_features=True
    - total_num_steps=200000
    - warmup_num_steps=1000
    - train_batch_size=256
    - val_batch_size=256
    - max_length=512
    - gradient_accumulation_steps=8
    - save_epoch_interval=1
    - total_num_epochs=1000
    - save_batch_interval=10000000
    - log_interval=100
    - wandb=True
    - wandb_group=psm_dev
    - wandb_team=ai4s-sfm
    - wandb_project=psm_dev
  job:
    name: pretrain_psm
    chdir: null
    override_dirname: act_dropout=0.1,add_3d=True,attn_dropout=0.1,backbone=geomformer,backbone_config=graphormer,d_tilde=1,data_path=/data/peiran/,data_path_list="pm6_10M_refined4.lmdb,matter-sim-3M,48organisms-fullatom.lmdb",dataset_name_list="pm6,mattersim,afdb",dataset_split_raito="0.9,0.0,0.1",dropout=0.1,droppath_prob=0.0,encoder_attention_heads=8,encoder_embed_dim=1024,encoder_ffn_embed_dim=4096,encoder_layers=12,gradient_accumulation_steps=8,ifresume=True,log_interval=100,mask_ratio=0.5,max_length=512,max_lr=2e-4,mode_prob="0.1,0.2,0.6,0.1",noise_mode=diff,noise_scale=0.2,num_pred_attn_layer=6,num_timesteps=1000,sandwich_ln=True,save_batch_interval=10000000,save_dir=/fastdata/peiran/tox/checkpoints/psmV0test/,save_epoch_interval=1,seed=666666,strategy=Zero1,total_num_epochs=1000,total_num_steps=200000,train_batch_size=256,use_2d_atom_features=True,use_2d_bond_features=True,val_batch_size=256,wandb=True,wandb_group=psm_dev,wandb_project=psm_dev,wandb_team=ai4s-sfm,warmup_num_steps=1000,weight_decay=0.0
    id: ???
    num: ???
    config_name: config_psm.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/peiranjin/SFM_framework
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/peiranjin/SFM_framework/config_file
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/peiranjin/SFM_framework/outputs/2024-05-09/05-53-53
    choices:
      backbone_config: graphormer
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
