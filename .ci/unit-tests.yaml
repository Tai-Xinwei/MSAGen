# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - main
  tags:
    include:
      - refs/tags/v*
pr:
- main

pool:
  vmImage: ubuntu-latest

variables:
  CONDA_ENV_NAME: sfm
  CONDA_ENV_DIR: $(Pipeline.Workspace)/.conda_env

steps:
# Checkout settings
- checkout: self
  submodules: recursive # checkout submodules recursively

# Cache Conda environment
- task: Cache@2
  inputs:
    key: 'conda | "$(Agent.OS)" | install/environment.yaml | v3'
    path: $(CONDA_ENV_DIR)
  displayName: Cache Conda environment

- bash: |
    # Note: build ids are not allowed to contain slashes
    if [ "$BUILD_REASON" == "PullRequest" ]; then
      NAME=${SYSTEM_PULLREQUEST_SOURCEBRANCH//[\/]/-}
      NAME=${NAME//refs-heads/}
    else
      NAME=${BUILD_SOURCEBRANCHNAME//[\/]/-}
    fi
    echo "##vso[build.updatebuildnumber]$BUILD_BUILDID-$NAME"
  displayName: Rename Build

# Install and run unit tests
- bash: |
    # Check if the cached environment exists and if not, create it
    # NOTE: the conda environment will be incompleted due to missing CUDA environment
    if [ ! -d "$(CONDA_ENV_DIR)/$(CONDA_ENV_NAME)" ]; then
      conda env create -f ./install/environment.yaml -n sfm
      eval "$(conda shell.bash hook)"
      conda activate $(CONDA_ENV_NAME)
      pip install pytest
      conda deactivate
      # Move the created environment to the cache directory
      conda create --clone "$(conda info --base)/envs/$(CONDA_ENV_NAME)" -p $(CONDA_ENV_DIR)/$(CONDA_ENV_NAME)
      conda env remove -n $(CONDA_ENV_NAME) -y
    fi
    # Activate the Conda environment
    eval "$(conda shell.bash hook)"
    conda activate $(CONDA_ENV_DIR)/$(CONDA_ENV_NAME)
    # Install deps that are missing in the cached conda environment
    pip install deepspeed==0.14.0 sacremoses==0.1.1 torch-tb-profiler==0.4.3 hydra-core torch-geometric==2.5.3
    pip install matbench
    pip install ase==3.23.0
    pip install --find-links https://data.pyg.org/whl/torch-2.3.0+cu121.html torch-geometric==2.5.3 pyg_lib torch_scatter torch_sparse torch_cluster
    pip install -e . --no-deps
    python setup_cython.py build_ext --inplace
    pytest tests/
  displayName: 'Install and run unit tests'
- bash: |
    eval "$(conda shell.bash hook)"
    conda activate $(CONDA_ENV_DIR)/$(CONDA_ENV_NAME)
    pip install setuptools-scm check-manifest
    python -m check_manifest
    python setup.py sdist bdist_wheel
  displayName: 'Create source package'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: sdist package'
  inputs:
    PathtoPublish: dist
    ArtifactName: dist
  # only publish the artifact if we built for the nightly branch (scheduled) or a tag
  condition: >-
      and(
        succeeded(),
        or(
          eq(variables['Build.Reason'], 'Schedule'),
          startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
