description: nlm_base

env_defaults:
  NODES: 4
  GPUS: 8
  # WANDB_API_KEY:  "d34f864932245bbdf3a9396a1ebde883ad2068f3"
  WANDB_API_KEY: "local-094f941ede8eda7a00c307f50595f054be5382f7"


target:
  service: sing
  name: baltic02
  workspace_name: msrresrchws

# target:
#     service: aml
#     name: townsend1

# target:
    # service: aml
    # name: townsend1

environment:
  image: ai4s-sfm:20240429.081857
  registry: msroctocr.azurecr.io
  username: msroctocr

storage:
  hai1:
    storage_account_name: hai1data # Storage account
    container_name: sfm # Container name
    mount_dir: /sfm

code:
  local_dir: ../SFM_framework

jobs:
- name: nlm_base
  sku: ${NODES}xG${GPUS}
  tags: [Project_Name:Science_Foundation_Model,ProjectID:PRJ-0209-A40,Experiment:SFMV1_Alignment]
  mpi: true
  process_count_per_node: 1
  command:
  - export WANDB_API_KEY=${WANDB_API_KEY}
  - export WANDB_PROJECT=nlm_base1b
  - export WANDB_TEAM=ai4s-sfm
  - export wandb_group=nlm_base1b
  - export NCCL_DEBUG=INFO
  - eval "$$(conda shell.bash hook)" && conda activate sfm
  - pip install -e . --no-deps
  - python setup_cython.py build_ext --inplace
  - pip install git+https://github.com/NVIDIA/TransformerEngine.git
  - pip uninstall flash-attn -y
  - export train_batch_size=4096
  - export val_batch_size=4096
  - export gradient_accumulation_steps=32
  - export train_data_path=/sfm/nlm/llama3_processed_data/v5_train/train.npy
  - export valid_data_path=/sfm/nlm/llama3_processed_data/v5_train/valid.npy
  - export dict_path=/sfm/llama/Meta-Llama-3-8B/original
  - export loadcheck_path=/sfm/llama/Meta-Llama-3-8B/original
  - export save_dir=/sfm/nlm/output/nlm_base1b/
  - bash scripts/nlm/pretrain_nlm_1b_base.sh
  submit_args:
    env:
      SHARED_MEMORY_PERCENT: 1.0
      CUDA_LAUNCH_BLOCKING: 1
