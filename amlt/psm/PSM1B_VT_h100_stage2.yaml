 # Steps to run:
# 1. copy data folder https://itpeus4data.blob.core.windows.net/shuz/data/pcq-pos-custom/ to your Azure storage blob container
# 2. copy script mae_3d.sh in FoundationModelProp/ to your Azure storage blob container
# 3. Specify the Azure storage account and container to use
# 4. Submit the job with this yaml file

description: PSMV1

env_defaults:
  NODES: 8
  GPUS: 8
  WANDB_API_KEY: "local-094f941ede8eda7a00c307f50595f054be5382f7"

target:
  service: sing
  name: baltic02
  workspace_name: sfm-ws


environment:
  image: ai4s-sfm:20240531.170731
  registry: msrmoldyn.azurecr.io
  username: msrmoldyn

storage:
  eastus2:
    storage_account_name: sfmdataeastus2 # Storage account
    container_name: psm # Container name
    mount_dir: /psm
  arca100:
    storage_account_name: sfmarca100 # Storage account
    container_name: sfm # Container name
    mount_dir: /sfm


code:
  local_dir: ../SFM_framework

jobs:
- name: psmv1_vt_v10_1b_stage1
  tags: [Project_Name:Science_Foundation_Model,ProjectID:PRJ-0209-A40,Experiment:SFM_PSM]
  sku: ${NODES}xG${GPUS}-IB
  mpi: true
  identity: managed
  process_count_per_node: 1
  command:
  - export WANDB_TEAM=ai4s-sfm
  - export wandb_group=psm_VT
  - export wandb_project=psm_VT
  - export WANDB_API_KEY=${WANDB_API_KEY}
  - export layers=32
  - export hidden_size=1536
  - export ffn_size=6144
  - export num_head=32
  - export atom_loss_coeff=1.0
  - export pos_loss_coeff=1.0
  - export sandwich_ln="true"
  - export dropout=0.0
  - export attn_dropout=0.1
  - export act_dropout=0.1
  - export weight_decay=0.0
  - export droppath_prob=0.0
  - export mask_ratio=0.3
  - export d_tilde=1.0
  - export max_lr=1.5e-4
  - export strategy=Zero1
  - export pipeline_model_parallel_size=0
  - export total_num_steps=500000
  - export warmup_num_steps=20000
  - export train_batch_size=1024
  - export val_batch_size=1024
  - export max_tokens=16000
  - export max_length=512
  - export gradient_accumulation_steps=8
  - export log_interval=100
  - export data_path=/psm/data/
  - export data_path_list='PubChemQC-B3LYP-PM6,matter-sim-15M-force-filtered-merged,AFDB70-plddt70.lmdb,matter-sim-15M-merged,ur50_23_bpe_pack1536.lmdb,20240101_PDB_Training_Data,complex.preprocessed.large'
  - export dataset_name_list='pm6,mattersim,afdb,mattersim,ur50,pdb,complex'
  - export dataset_split_raito='0.2,0.05,0.3,0.15,0.1,0.1,0.1'
  - export dataset_micro_batch_size='64,2,8,2,6,8,6'
  - export mode_prob='0.4,0.4,0.2'
  - export fp16=False
  - export clean_sample_ratio=0.8
  - export energy_loss_ratio=0.1
  - export force_loss_ratio=0.1
  # - export num_timesteps=1000
  # - export ddpm_beta_start=1e-4
  # - export ddpm_beta_end=2e-2
  - export AutoGradForce=True
  - export use_hard_dist_loss=True
  - export use_unified_batch_sampler=True
  - export only_use_rotary_embedding_for_protein=False
  - export use_dali_pipeline=False
  - export save_batch_interval=5000
  # - export only_use_rotary_embedding_for_protein=True
  - export loadcheck_path=/sfm/sfmexpresults/peiran/psmv1_vt_v10_1b/checkpoints
  - export save_dir=/sfm/sfmexpresults/peiran/psmv1_vt_v10_1b/checkpoints
  - eval "$$(conda shell.bash hook)" && conda activate sfm
  - python setup_cython.py build_ext --inplace
  - pip install nvidia-dali-cuda120
  - bash ./scripts/psm/pretrain_psm_vanillatransformer.sh
  submit_args:
    container_args:
      shm_size: 1024g
  preemptible: false
